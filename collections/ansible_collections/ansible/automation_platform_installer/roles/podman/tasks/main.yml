---
- name: Allocate subuids for {{ run_podman_as }} user
  subuid:
    user: "{{ run_podman_as }}"
  become: true
  register: subuids

- name: Allocate subgids for {{ run_podman_as }} user
  subgid:
    group: "{{ run_podman_as }}"
  become: true
  register: subgids

- name: Create directory for crun runtime config
  file:
    path: /var/lib/{{ run_podman_as }}/.config/containers
    state: directory
    mode: 0700
    owner: "{{ run_podman_as }}"
    group: "{{ run_podman_as }}"
    recurse: yes

- name: Configure podman default runtime
  copy:
    content: |
      [engine]
      runtime = "{{ default_runtime }}"
    dest: "/var/lib/{{ run_podman_as }}/.config/containers/containers.conf"
    owner: "{{ run_podman_as }}"
    group: "{{ run_podman_as }}"
    mode: 0600

- name: Create empty mounts config file to avoid permissions error message
  copy:
    content: ""
    dest: "/var/lib/{{ run_podman_as }}/.config/containers/mounts.conf"
    force: false
    owner: "{{ run_podman_as }}"
    group: "{{ run_podman_as }}"
    mode: 0600

- name: Check current SELinux context mapping
  shell: semanage fcontext -C -l | grep /var/lib/{{ run_podman_as }}/.local/share/containers
  register: semanage_current
  changed_when: '"/var/lib/containers" in semanage_current'
  ignore_errors: true

- name: Delete custom SELinux context mapping
  command: semanage fcontext -D /var/lib/{{ run_podman_as }}/.local/share/containers
  when:
    - semanage_current.stdout_lines|length
    - '"/var/lib/containers" not in semanage_current'
  register: semanage_deleted

- name: Register expected SELinux context mapping
  command: semanage fcontext -a -e /var/lib/containers /var/lib/{{ run_podman_as }}/.local/share/containers
  register: selinux_manage
  when: semanage_current.failed|bool or semanage_deleted.changed|bool


- name: Force SELinux relabeling for existing files
  command: restorecon -R /var/lib/{{ run_podman_as }}/.local/share/containers
  when: podman_force_selinux_relabel|bool

- name: Ensure registries.conf.d exists
  file:
    path: /etc/containers/registries.conf.d/
    state: directory
    recurse: true
    mode: 0755

- name: Force fully qualified image names to be provided to podman pull
  copy:
    content: |
      unqualified-search-registries = []
    dest: /etc/containers/registries.conf.d/force-fully-qualified-images.conf
    mode: 0644

- name: Ensure changes are applied to podman
  command: podman system migrate
  when: subuids is changed or subgids is changed
  become: yes
  become_user: "{{ run_podman_as }}"
