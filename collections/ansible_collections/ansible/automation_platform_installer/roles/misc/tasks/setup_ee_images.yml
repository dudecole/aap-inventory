---
- set_fact:
    ee_images:
      - ee-29-rhel8
      - ee-minimal-rhel8
      - ee-supported-rhel8

- block:
    - name: Ensure skopeo exists
      dnf:
        name: skopeo
        state: present
      register: installed_skopeo

    - name: Set up EE images
      block:
        - name: Set source registry credential (username)
          set_fact:
            src_registry_creds: "--src-creds '{{ registry_username }}'"
          when:
            - registry_username | default('') | length
            - not registry_password | default('') | length

        - name: Set source registry credential (username and password)
          set_fact:
            src_registry_creds: "--src-creds '{{ registry_username }}:{{ registry_password }}'"
          when:
            - registry_username | default('') | length
            - registry_password | default('') | length
          no_log: true

        - name: Push EE images to Automation Hub registry
          command: skopeo copy \
                     --retry-times 3 \
                     {{ src_registry_creds | default ('') }} --src-tls-verify={{ registry_verify_ssl | default(true) | bool }} \
                     --dest-creds 'admin:{{ automationhub_admin_password }}' --dest-tls-verify=false \
                     docker://{{ _ee_image_base }}{{ item }}:latest \
                     docker://{{ _hub_hostname }}/{{ item }}:latest
          environment:
            HTTP_PROXY: "{{ http_proxy | default('') }}"
            HTTPS_PROXY: "{{ https_proxy | default('') }}"
            NO_PROXY: "{{ no_proxy | default('') }}"
          register: push_ee_result
          ignore_errors: true
          no_log: true
          with_items: '{{ ee_images }}'

      when:
        - inventory_hostname in groups['automationhub'] | default([])
        - not bundle_install | default(false) | bool

    - name: Set up EE images (bundle)
      block:
        - name: Create temporary directory for EE images
          tempfile:
            path: '{{ ee_images_tmp_dir | default(omit) }}'
            state: directory
            suffix: ee_images
          register: ee_image_tmp

        - name: Copy bundled EE images
          block:
            - name: Copy bundled EE images
              synchronize:
                src: '{{ setup_dir }}/images/'
                dest: '{{ ee_image_tmp.path }}'
          rescue:
            - name: Copy bundled EE images (legacy)
              copy:
                src: '{{ setup_dir }}/images/'
                dest: '{{ ee_image_tmp.path }}'

        - name: Uncompress bundled EE images
          command: gunzip '{{ ee_image_tmp.path }}/{{ item }}.tgz'
          args:
            creates: '{{ ee_image_tmp.path }}/{{ item }}.tar'
          with_items: '{{ ee_images }}'

        - name: Set permission for the uncompressed images
          file:
            path: '{{ ee_image_tmp.path }}'
            state: directory
            recurse: yes
            mode: '0755'

        - name: Push EE images to Automation Hub registry
          command: skopeo copy \
                     --retry-times 3 \
                     --dest-creds 'admin:{{ automationhub_admin_password }}' --dest-tls-verify=false \
                     'docker-archive://{{ ee_image_tmp.path }}/{{ item }}.tar' \
                     docker://{{ _hub_hostname }}/{{ item }}:latest
          register: push_bundle_ee_result
          ignore_errors: true
          no_log: true
          with_items: '{{ ee_images }}'
          when: inventory_hostname in groups['automationhub'] | default([])

        - name: Push EE images locally on Automation Controller and Execution Nodes
          command: skopeo copy \
                     --retry-times 3 \
                     'docker-archive://{{ ee_image_tmp.path }}/{{ item }}.tar' \
                     containers-storage:{{ _ee_image_base }}{{ item }}:latest
          become: True
          become_user: awx
          register: push_controller_ee_result
          ignore_errors: true
          no_log: true
          with_items: '{{ ee_images }}'
          when: inventory_hostname not in groups['automationhub'] | default([])

      always:
        - name: Remove copied EE images
          file:
            path: "{{ ee_image_tmp.path }}"
            state: absent
          when: ee_image_tmp.path is defined

      when: bundle_install | default(false) | bool

    - name: Parse error messages
      set_fact:
        ee_error_messages: "{{ ee_error_messages | default([]) + [ item.stderr ] }}"
      with_items: "{{ push_ee_result.results + push_bundle_ee_result.results + push_controller_ee_result.results }}"
      no_log: true
      when: item is failed

    - name: Ensure EE images are pushed
      fail:
        msg: "Failed to push image(s), reason: {{ ee_error_messages }}"
      when: ee_error_messages | default([]) | length

  always:
    - name: Remove skopeo if added by installer
      dnf:
        name: skopeo
        state: absent
        autoremove: true
      when: installed_skopeo is changed
