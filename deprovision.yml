## TODO:
#- fix the include_vars portion, probably 'exposing paths'
#  is what will do it..
#-
---
- hosts: localhost
  become: false
  gather_facts: no

  vars_files:
    - '{{ playbook_dir }}/vars/creds.yml'

  vars:
    controller_host: "{{ groups['automationcontroller'][0] }}"
    controller_api_user: admin
    controller_protocol: "https"

  tasks:
    - block:
        - set_fact:
            controller_api_base: "{{ controller_protocol }}://{{ controller_host }}"

        - name: get instance groups (excluding isolated)
          uri:
            url: "{{ controller_api_base }}/api/v2/instance_groups?controller=null"
          register: instance_groups
          become: false
          changed_when: False

        - name: get instance group instances
          uri:
            url: "{{ controller_api_base }}{{ item['related']['instances'] }}"
          register: response
          changed_when: False
          loop: "{{ instance_groups.json.results }}"

        - name: set facts for configured instances
          set_fact:
            controller_instances: "{{ response.results | map(attribute='json') | map(attribute='results') | flatten | map(attribute='hostname') | list }}"

        - name: set fact for all instance groups
          set_fact:
            inventory_instance_groups: "{{ (groups | select('match', 'instance_group') | list ) + (groups | select('match', 'automationcontroller') | list) }}"

        - name: set fact for each instance in instance instance_groups
          set_fact:
            inventory_instances: "{{  inventory_instance_groups | map('extract', groups) | flatten | map('infer_address', hostvars) | list }}"

        - name: determine differences
          set_fact:
            inventory_only_instances: "{{ inventory_instances | difference(controller_instances) }}"
            controller_only_instances: "{{ controller_instances | difference(inventory_instances) }}"

        - name: deprovision instances not in inventory
          shell: "awx-manage deprovision_instance --hostname={{ item }}"
          loop: "{{controller_only_instances}}"
          delegate_to: "{{controller_host}}"
          become: true
          when: not ansible_check_mode

      check_mode: no
      module_defaults:
        uri:
          method: GET
          user: "{{ controller_api_user }}"
          password: "{{ controller_api_password }}"
          validate_certs: False
          status_code: [ 200, 201 ]
          force_basic_auth: yes
