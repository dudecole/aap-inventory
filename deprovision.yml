## TODO:
#- fix the include_vars portion, probably 'exposing paths'
#  is what will do it..
#
#---
## defaults file for aap_jobs
#aap_admin_token: "some-token-here" #aap admin token
#  TyuBLGK6NMyIEO3vjuKBsPKIjsH1oU  

#
#-
---
- hosts: localhost
  become: false
  connection: local
  gather_facts: no

  vars_files:
    - '{{ playbook_dir }}/vars/creds.yml'

  vars:
    return_codes: [200,201,202]
    controller_validate_certs: false
    controller_url: https://192.168.59.10
    controller_username: "admin"
    controller_password: <please-encrypt-me>
    controller_verify_ssl: False
    basic_auth: yes
    validate_certs: false
    controller_hostname: 192.168.69.10 #"{{ groups['automationcontroller'][0] }}"
    #controller_api_user: admin
    #controller_protocol: "https"

  tasks:
    - block:

      - name: Get instance groups (excluding isolated)
        uri: 
          url: "{{ controller_url }}/api/v2/instance_groups?name=default"
          method: GET
          headers:
            Authorization: "Bearer TyuBLGK6NMyIEO3vjuKBsPKIjsH1oU"
            content-Type: application/json
          force_basic_auth: "{{ basic_auth }}"
          status_code: "{{ return_codes }}"
          validate_certs: "false" #{{ validate_certs }}"
        register: instance_groups 

      - name: get instance group instances
        uri:
          url: "{{ controller_url }}{{ item['related']['instances'] }}"
          method: GET
          headers:
            Authorization: "Bearer TyuBLGK6NMyIEO3vjuKBsPKIjsH1oU"
            content-Type: application/json
          force_basic_auth: "{{ basic_auth }}"
          status_code: "{{ return_codes }}"
          validate_certs: "false" #{{ validate_certs }}"
        register: response
        changed_when: False
        loop: "{{ instance_groups.json.results }}"

      - name: set facts for configured instances
        set_fact:
          execution_nodes: "{{ response.results | map(attribute='json') | map(attribute='results') | flatten | map(attribute='hostname') | list }}"

      - name: set fact for all instance groups
        set_fact:
          inventory_instance_groups: "{{ (groups | select('match', 'instance_group') | list ) + (groups | select('match', 'execution_nodes') | list) }}"

      - name: debug inventory_instances
        debug:
          msg: "{{ inventory_instance_groups }}"

      - name: set fact for each instance in instance instance_groups
        set_fact:
          inventory_instances: "{{  inventory_instance_groups | map('extract', groups) | flatten | map('infer_address', hostvars) | list }}"
      - name: debug inventory_instances
        debug:
          msg: "{{ inventory_instances }}"

      - name: determine differences
        set_fact:
          inventory_only_instances: "{{ inventory_instances | difference(execution_nodes) }}"
          execution_only_instances: "{{ execution_nodes | difference(inventory_instances) }}"

      - name: debug inventory_instances
        debug:
          msg: 
          - "inventory_only_instances: {{ inventory_only_instances }}" 
          - "execution_only_instances: {{ execution_only_instances }}"

      - name: deprovision instances not in inventory
        command: "awx-manage deprovision_instance --hostname=192.168.59.12" #{{ item }}"
#        loop: "{{ execution_only_instances }}"
        delegate_to: "{{ controller_hostname }}"
        become: true

